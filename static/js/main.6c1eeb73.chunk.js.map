{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyListenerCallback","event","code","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACF,UAAfA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAYE,EAAMC,OAElC,EAAKC,SAAS,CAAEJ,WAAYE,EAAMG,OAjBxC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,uBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,uBAV/C,oBAqBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKT,MAAMC,WAAX,kCAC8BQ,KAAKT,MAAMC,WADzC,KAEG,kCA3Bd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6c1eeb73.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyListenerCallback);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyListenerCallback);\n  }\n\n  keyListenerCallback = (event: KeyboardEvent) => {\n    if (event.code === 'Space') {\n      this.setState({ pressedKey: event.code });\n    } else {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The las pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}